---
title: "EPPS 6323: Lab01 R programming basics I"
author: "My name"
format: html
editor: visual
---

R Programming Basic Commands

Create object using the assignment operator (<-, =)

```{r}
x <- c(1,3,2,5)
x
x = c(1,6,2)
x
y = c(1,4,3)
```

Using function

```{r}
length(x)  # What does length() do?
# length() measures the number of elements in a vector
length(y)
```

Using +, -, *, /,^ operators

```{r}
x+y
ls() # List objects in the environment
rm(x,y) # Remove objects
ls()
rm(list=ls()) # Danger! What does this do? Not recommended!
# It deletes all objects from the workspace, clearing the environment completely.
```

Matrix operations

```{r}
?matrix
x=matrix(data=c(1,2,3,4), nrow=2, ncol=2) # Create a 2x2 matrix object
x
x=matrix(c(1,2,3,4),2,2)
matrix(c(1,2,3,4),2,2,byrow=T) # What about byrow=F?
# byrow=FALSE (default) fills the matrix column-wise, while byrow=TRUE fills it row-wise.
```

```{r}
sqrt(x) # What does x look like?
# x remains the same, but sqrt(x) returns the square root of each element.
x
x^2 # Squares each element in x
```

```{r}
x=rnorm(50) # Generate a vector of 50 numbers using the rnorm() function

y=x+rnorm(50,mean=50,sd=.1) # What does rnorm(50,mean=50,sd=.1) generate?
# It generates 50 random numbers with a normal distribution centered at mean=50 and standard deviation=0.1.
```

```{r}
cor(x,y) # Correlation of x and y
set.seed(1303) # Set the seed for Random Number Generator (RNG) to generate values that are reproducible.
rnorm(50)
set.seed(3) # Try different seeds?
# Different seeds produce different sequences of random numbers.
y=rnorm(100)
```

Simple descriptive statistics (base)

```{r}
mean(y) # Calculates the mean (average) of y
var(y) # Computes the variance of y
sqrt(var(y)) # Computes the standard deviation manually
sd(y) # Standard deviation of y (same as sqrt(var(y)))
```

Visualization using R Graphics (without packages)

```{r}
x=rnorm(100)
y=rnorm(100)
plot(x,y) # Creates a scatter plot of x vs y
```

```{r}
plot(x,y, pch=20, col = "firebrick") # Scatterplot for two numeric variables by default
plot(x,y, pch=20, col = "steelblue",xlab="this is the x-axis",ylab="this is the y-axis",main="Plot of X vs Y") # Add labels
```

```{r}
pdf("Figure01.pdf") # Save as pdf, add a path or it will be stored on the project directory
plot(x,y,pch=20, col="forestgreen") # Try different colors?
# Different colors can be used to distinguish elements visually.
dev.off() # Close the file using the dev.off function
```

```{r}
x=seq(1,10) # Same as x=c(1:10)
x
x=1:10
x
x=seq(-pi,pi,length=50) # Generates 50 equally spaced values between -pi and pi
y=x
